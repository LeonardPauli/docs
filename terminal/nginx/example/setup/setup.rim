# terminal/nginx/example/setup
' LeonardPauli/docs
	Created by Leonard Pauli, 24 mar 2018

prerequisites:
	see "./setup-server-simple"
	// optional: see "./simplest-server-setup"."creating dev-mode setup"
	see "./using-ssl-own"
	see "./nginx-misc-fixes"
	see "./using-environments"
	see "./using-deploy"
	see "./using-ssl-letsencrypt"


	// run all commands from project dir
	
	- environment:
		variables:
			- cp .env.example .env && vi .env // enter own values
		files:
			- mkdir -p data/{ca,ssl}
			- cd ./setup && ./ssl.ca.create.sh // (is using local) or put your existing in data/ca
	- ./run

	- see using-deploy.environment.setup


	then:
		- secure production environment:
			// see https://github.com/voxpupuli/hiera-eyaml
			// see terminal/pgp-workflow
			- generate server.key.(pub and priv) on server once during setup by trusted sysadmin
			- only copy server.key.pub, and save it to git
			- discard all access to server (including server.key.priv)
				// it will then only be changed using git/CI system
				// if now core setup is needed, only option is to discard and recreate the server
				// Possible to save backup access in case inspection needed (in case of attack)? if so its use should be clearly noted.
			- upload server.key.priv to 
			- secret production files
				- eg. .env.prod and ssl.key.prod
				- encrypt using server.key.pub, during dev
				- decrypt using server.key.priv, on server
				' should only be readable by prod server, but writable by devs
						- only reach prod after CI and peer-review
						- extra flag if secure stuff changed
						- only pass master CI if last commit signed by trusted devs
					encrypted could be stored in git
						(but keeping them org-public rather than world-public can't be that bad if quantum computers manage to crack all encryption? :))
							(Nah, bigger problems then.)
