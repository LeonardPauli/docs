# force https on known domains
#  - using 301/308 (permanent redirect) could be hard to undo
# 	-> use 307 when testing (temporary redirect)
server {
	listen 80;
	listen [::]:80;
	server_name
		local.my-app.com my-app.localhost
	;
	return 301 https://$host$request_uri;
}


# my-app
server {
	listen 443 ssl;
	listen [::]:443 ssl;
	server_name local.my-app.com my-app.localhost;

	include conf.d/ssl.snippet;
	ssl_certificate ssl/own-ca-signed.crt;
	ssl_certificate_key ssl/own-ca-signed.key;

	# other security headers
	add_header X-Frame-Options DENY; # prevent getting iframed (and related attacks)
	add_header X-Content-Type-Options nosniff; # prevents mime-type sniffing (and related attacks)
	add_header X-XSS-Protection "1; mode=block"; 

	root /usr/src/app/;
	try_files /index.html =404;
}


# catch all
server {
	listen 443; listen [::]:443; # both https and http
	listen 80; listen [::]:80;
	server_name ~.; # like wildcard _, but better in some cases (?)
	return 444; # nginx for abort
}
