# app/java/primitive
' LeonardPauli/docs
	Created by Leonard Pauli, 14 sept 2018
	based on https://docs.oracle.com/javase/tutorial


arrays:
	constant size:
		int[] xs = new int[size]
		xs.length == size
		xs[0] = 5;
		xs[0] == 5;
		directly initialized:
			int[] xs = { 5, 3, 4 };
		manuall size change by copy:
			int maxSize = ...;
			X[] xs = new X[maxSize];
			...
			int actualOrIncreasedSize = ...;
			X[] ret = Arrays.copyOf(xs, actualOrIncreasedSize);
			lower level:
				System.arrayCopy(sourceXs, sourceStartIdx, targetXs, targetStartIdx, countToCopy);
	dynamic size:
		import java.util.List;
		import java.util.ArrayList;
		List<MyType> xs = new ArrayList<MyType>();
		MyType x = new MyType()
		xs.add(x)
		xs.get(0) == x
		xs.size() // length
		for (MyType x : xs) { ...x... }
		xs.addAll(xs2)
		filter:
			List<String> list = new ArrayList<>(Arrays.asList("ab", "bc", "cd", "de"));
			list.removeIf(s -> !s.contains("c"));

strings:
	manual:
		String s = "hello";
		int l = s.length(); l == 5
	looping over chars:
		for (char ch : str.toCharArray()) {}
		using lambda:
			str.chars().forEachOrdered(i -> ...);
	dynamic size:
		StringBuilder sb = new StringBuilder("");
		sb.append("...");
		sb.toString();
