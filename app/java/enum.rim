# app/java/enum
' LeonardPauli/docs
	Created by Leonard Pauli, 14 sept 2018
	based on https://docs.oracle.com/javase/tutorial
	based on http://tutorials.jenkov.com/java/enums.html


enum:
	example:
		enum Level { LOW, MEDIUM, HIGH, SUPER_EXTREME } // convention: all caps + _
		Level l = Level.MEDIUM
		p.name() == "MEDIUM"
		p.toString() == "MEDIUM"
		for (Level l : Level.values()) { ... }
		Level.valueOf("HIGH") == Level.HIGH
		Level.values().length == 4
		Level.HIGH.ordinal() == 2

	example.fields:
		public enum Modes {
			mode1 ("a", 3),
			mode2 ("b", 7),
			mode3 ("c", 2);

			private final String title;
			private final int nr;

			private Modes(String title, int nr) {
				this.title = title;
				this.nr = nr;
			}

			public int getNr() { return nr; }
			public String toString() { return title; }
		}
		Modes.mode1.toString() == "a"

	example.method.abstract:
		public enum Level {
			LOW{ @Override public int getY(int x) { return x + 2; } },
			MEDIUM{ @Override public int getY(int x) { return x * 2; } },
			HIGH { @Override public int getY(int x) { return x * x * 3; } };

			public abstract int getY(int x);
		}
	example.method.abstract+field:
		public enum Level {
			LOW(1){ @Override public int getY(int x) { return x + 2; } },
			Level(int nr) { ... }
			public abstract int getY(int x);
		}
	example.field.static.custom:
		public enum Level {
			LOW, MEDIUM;
			private Level next;
			static {
				LOW.next = MEDIUM;
			}
		}
	example.interface.implement:
		interface Fn { int getY(int x); }
		public enum Level implements Fn {
			LOW{ public int getY(int x) { return x + 2; } },
			MEDIUM{ public int getY(int x) { return x * 2; } },
			HIGH { public int getY(int x) { return x * x * 3; } };
		}

	utilities:
		set:
			EnumSet<Level> enumSet = EnumSet.of(Level.HIGH, Level.MEDIUM); // instead of normal set, optimised for enums
		map:
			EnumMap<Level, String> enumMap = new EnumMap<Level, String>(Level.class);
			enumMap.put(Level.HIGH  , "high metadata");
			enumMap.put(Level.MEDIUM, "Medium metadata");
			String levelValue = enumMap.get(Level.HIGH);

