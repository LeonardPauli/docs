# app/meta-seo
' LeonardPauli/docs
	Created by Leonard Pauli, 14 may 2018


// search engine optimisation


// see "https://blog.realmacsoftware.com/which-meta-tags-matter-for-seo-in-2018/"
search engines relies more on actual content than tags
	// https://medium.freecodecamp.org/seo-vs-react-is-it-neccessary-to-render-react-pages-in-the-backend-74ce5015c0c9
	- google renders dynamical content (ie. js + css)
	- inspect using "Fetch and Render" // https://support.google.com/webmasters/answer/6066468
		// https://spin.atomicobject.com/2017/12/04/react-fetch-as-google/
	- for Baidu (largest in China): prerendering and through robots.txt or header serving static instead might be necessary
	- google might have higher latency (extra days) for SPA's compared to static (js takes more performance?)
	- SPA pages indexed: "Google: 17 Bing: 6 Yahoo: 6 Baidu: 1"
		- theory: Google renders, indexes + follows links in SPA's, others doesn't follow links, Baidu doesn't even render
	- hard to de-index 404-pages (no 404 header?)
	- mostly URL preview on FB, Twitter, Slack etc needs static HTML or meta tags
	- see prerender.io, SSR (server-side rendering), and progressive enhancement (render what's possible server-side + cache, that attach js)
	- topic relevance score, subject matter authority score
		- might be lower with SPA's? // (someone got 10% drop in traffic)

- canonical tags
- meta robots tags
- avoid keywords tag
- use route dependent unique description + title
	<title>ExampleSocialSite: Sign up for a new account.</title>
	instead of "Home": "ExampleSocialSite"
	instead of "Profile": "\(username)'s Profile"
	// see https://support.google.com/webmasters/answer/35624?visit_id=1-636389903498301874-582773904&rd=1
	- tagged data might allow engines to display/use it neater
		<meta name="description" content="Author: A.N. Author, 
			Illustrator: P. Picture, Category: Books, Price: $17.99, 
			Length: 784 pages">
	- otherwise, a one/two short sentence summarising
	<meta name="nosnippets">
- in search result, click "Cached" to see last crawl date
- site-links
	// see https://bloggingwizard.com/google-sitelinks/
	autogenerated, 2, 4, or 6 [+searchbox]
	improved chances with more unique name
	only #1 result?
	- add sitemap.xml // https://support.google.com/webmasters/answer/34592?hl=en
		- "Add/Test Sitemap" in google console

- use open-graph:
	// http://ogp.me/
	<meta property="og:title" content="Page Title" />
	<meta property="og:description" content="Page content description" />
	<meta property="og:url" content="http://domain.com/page-title/" />
	<meta property="og:image" content="/path/to/image.jpg" />

- use twitter-cards:
	// https://dev.twitter.com/cards/overview
	<meta name="twitter:card" content="summary_large_image">
	<meta name="twitter:site" content="@rapidweaver">
	<meta name="twitter:creator" content="@twitter-username">
	<meta name="twitter:title" content="Page Titles">
	<meta name="twitter:description" content="Description of the page content">
	<meta name="twitter:image" content="/path/to/image.png">

- use responsive-meta / viewport tag:
	// https://css-tricks.com/snippets/html/responsive-meta-tag/
	<meta name="viewport" content="width=device-width, initial-scale=1">

- example:
	<meta charset="utf-8">
	<title>Preact: Fast 3kb React alternative with the same ES6 API. Components &amp; Virtual DOM.</title>
	<meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1,minimal-ui">
	<meta name="mobile-web-app-capable" content="yes">
	<meta name="apple-mobile-web-app-capable" content="yes">
	<meta name="format-detection" content="telephone=no">
	<meta name="theme-color" content="#673AB8">
	<link rel="manifest" href="/manifest.json">
	<link rel="icon" type="image/png" href="/assets/app-icon-192.png" sizes="192x192">
	<link rel="shortcut icon" href="/favicon.ico">

- use sitemap
	- /sitemap.xml example: // autogenerated or manual
		// https://alligator.io/vuejs/vue-seo-tips/
		<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"
			xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd">
			<url><loc>https://www.my-site.com</loc></url>
			<url><loc>https://www.my-site.com/my-special-page</loc></url>
			<url><loc>https://www.my-site.com/my-other-special-page</loc></url>
			<url><loc>https://www.my-site.com/okay-this-one-isnt-that-special-but-it-kinda-works</loc></url>
		</urlset>
	- vi /robots.txt
		Sitemap: https://my-site.com/sitemap.xml

- mobile adjust
	// see https://developers.google.com/web/fundamentals/design-and-ux/responsive/

- improve loading speed
	- use PWA: "Progressive Web App"
		// https://alligator.io/js/intro-progressive-web-apps/
		- use https
		- use Web App Manifest file, manifest.json
		- use Service Worker

- check https config
- spread links // eg. post on social media, etc, so crawlers can get started
- check robots.txt // make sure to be sure about what you disallow, don't use whitelist (block all with exceptions)

test:
	- using lighthouse plugin // https://chrome.google.com/webstore/detail/lighthouse/blipmdconlkpinefehnmjammfjpmpbjk?hl=en

for vue:
	// https://alligator.io/vuejs/vue-seo-tips/
	- vue-meta
		alt: see "https://alligator.io/vuejs/vue-router-modify-head/"
		- npm i vue-meta
		- vi main.js:
			import Meta from 'vue-meta'
			Vue.use(Meta)
		' TODO: will previous be removed?
			<meta charset="utf-8">
			<meta http-equiv="X-UA-Compatible" content="IE=edge">
			<meta name="viewport" content="width=device-width,initial-scale=1.0">
			<!--[if IE]><link rel="shortcut icon" href="/favicon.ico"><![endif]-->
			<title>base</title>
			<link rel="preload" as="script" href="/app.js">
			<link rel="icon" type="image/png" sizes="32x32" href="/img/icons/favicon-32x32.png">
			<link rel="icon" type="image/png" sizes="16x16" href="/img/icons/favicon-16x16.png">
			<link rel="manifest" href="/manifest.json">
			<meta name="theme-color" content="#4DBA87">
			<meta name="apple-mobile-web-app-capable" content="no">
			<meta name="apple-mobile-web-app-status-bar-style" content="default">
			<meta name="apple-mobile-web-app-title" content="base">
			<link rel="apple-touch-icon" href="/img/icons/apple-touch-icon-152x152.png">
			<link rel="mask-icon" href="/img/icons/safari-pinned-tab.svg" color="#4DBA87">
			<meta name="msapplication-TileImage" content="/img/icons/msapplication-icon-144x144.png">
			<meta name="msapplication-TileColor" content="#000000">
		- vi views/Page.vue // after export default { ...
				metaInfo: {
					title: 'My Page Title', // overrideable by children
					titleTemplate: '%s - My Site', // result: "My Page Title - My Site"
					meta: [
						{http-equiv: 'Content-Type', content: 'text/html; charset=utf-8'},
						{name: 'viewport'. content: 'width=device-width, initial-scale=1'},
						{name: 'description', content: 'I have things here on my site.'}
					],
					links: [
						// if multiple url's might lead to the same content, provide the "main" url
						{rel: 'canonical', href: 'https://my-site.com/my-special-page'}
					],
				}
		- vi views/Page.vue // after meta: [ ...
			// OpenGraph data
			{property: 'og:title', content: 'My Page Title - My Site'},
			{property: 'og:site_name', content: 'My Site'},
			{property: 'og:type', content: 'website'}, // http://ogp.me/#types
			{property: 'og:url', content: 'https://my-site.com/my-special-page'}, // = canonical link, see above
			{property: 'og:image', content: 'https://my-site.com/my-special-image.jpg'},
			{property: 'og:description', content: 'I have things here on my site.'} // mostly = meta description

			// Twitter card
			{name: 'twitter:card', content: 'summary'},
			{name: 'twitter:site', content: 'https://my-site.com/my-special-page'},
			{name: 'twitter:title', content: 'My Page Title - My Site'},
			{name: 'twitter:description', content: 'I have things here on my site.'},
			{name: 'twitter:creator', content: '@alligatorio'} // twitter handle
			{name: 'twitter:image:src', content: 'https://my-site.com/my-special-image.jpg'},

			// Google / Schema.org markup:
			{itemprop: 'name', content: 'My Page Title - My Site'},
			{itemprop: 'description': 'I have things here on my site.'},
			{itemprop: 'image', content: 'https://my-site.com/my-special-image.jpg'}

	- prerender-spa-plugin // simpler + at build time - use if only for seo + with a limited amount of pages
		// https://alligator.io/vuejs/vue-prerender-prerenderer/
		// https://github.com/chrisvfritz/prerender-spa-plugin
		// https://vuejs-templates.github.io/webpack/prerender.html
		// https://snipcart.com/blog/vuejs-tutorial-seo-example
	- ssr // requires web server, best for pages with much dynamic content
		// https://ssr.vuejs.org/en/